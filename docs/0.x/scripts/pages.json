[{"name":"abstract class BooleanFeatureFlag(val key: String, val default: Boolean) : FeatureFlag<Boolean> ","description":"io.github.kevincianfarini.monarch.BooleanFeatureFlag","location":"core/io.github.kevincianfarini.monarch/-boolean-feature-flag/index.html","searchKeys":["BooleanFeatureFlag","abstract class BooleanFeatureFlag(val key: String, val default: Boolean) : FeatureFlag<Boolean> ","io.github.kevincianfarini.monarch.BooleanFeatureFlag"]},{"name":"abstract class DoubleFeatureFlag(val key: String, val default: Double) : FeatureFlag<Double> ","description":"io.github.kevincianfarini.monarch.DoubleFeatureFlag","location":"core/io.github.kevincianfarini.monarch/-double-feature-flag/index.html","searchKeys":["DoubleFeatureFlag","abstract class DoubleFeatureFlag(val key: String, val default: Double) : FeatureFlag<Double> ","io.github.kevincianfarini.monarch.DoubleFeatureFlag"]},{"name":"abstract class LongFeatureFlag(val key: String, val default: Long) : FeatureFlag<Long> ","description":"io.github.kevincianfarini.monarch.LongFeatureFlag","location":"core/io.github.kevincianfarini.monarch/-long-feature-flag/index.html","searchKeys":["LongFeatureFlag","abstract class LongFeatureFlag(val key: String, val default: Long) : FeatureFlag<Long> ","io.github.kevincianfarini.monarch.LongFeatureFlag"]},{"name":"abstract class StringFeatureFlag(val key: String, val default: String) : FeatureFlag<String> ","description":"io.github.kevincianfarini.monarch.StringFeatureFlag","location":"core/io.github.kevincianfarini.monarch/-string-feature-flag/index.html","searchKeys":["StringFeatureFlag","abstract class StringFeatureFlag(val key: String, val default: String) : FeatureFlag<String> ","io.github.kevincianfarini.monarch.StringFeatureFlag"]},{"name":"abstract fun <T : Any> currentValueOf(flag: FeatureFlag<T>): T","description":"io.github.kevincianfarini.monarch.FeatureFlagManager.currentValueOf","location":"core/io.github.kevincianfarini.monarch/-feature-flag-manager/current-value-of.html","searchKeys":["currentValueOf","abstract fun <T : Any> currentValueOf(flag: FeatureFlag<T>): T","io.github.kevincianfarini.monarch.FeatureFlagManager.currentValueOf"]},{"name":"abstract fun <T : Any> currentValueOfOrNull(flag: FeatureFlag<T>, store: FeatureFlagDataStore): T?","description":"io.github.kevincianfarini.monarch.FeatureFlagManagerMixin.currentValueOfOrNull","location":"core/io.github.kevincianfarini.monarch/-feature-flag-manager-mixin/current-value-of-or-null.html","searchKeys":["currentValueOfOrNull","abstract fun <T : Any> currentValueOfOrNull(flag: FeatureFlag<T>, store: FeatureFlagDataStore): T?","io.github.kevincianfarini.monarch.FeatureFlagManagerMixin.currentValueOfOrNull"]},{"name":"abstract fun <T : Any> valuesOf(flag: FeatureFlag<T>): Flow<T>","description":"io.github.kevincianfarini.monarch.ObservableFeatureFlagManager.valuesOf","location":"core/io.github.kevincianfarini.monarch/-observable-feature-flag-manager/values-of.html","searchKeys":["valuesOf","abstract fun <T : Any> valuesOf(flag: FeatureFlag<T>): Flow<T>","io.github.kevincianfarini.monarch.ObservableFeatureFlagManager.valuesOf"]},{"name":"abstract fun <T : Any> valuesOfOrNull(flag: FeatureFlag<T>, store: ObservableFeatureFlagDataStore): Flow<T>?","description":"io.github.kevincianfarini.monarch.ObservableFeatureFlagManagerMixin.valuesOfOrNull","location":"core/io.github.kevincianfarini.monarch/-observable-feature-flag-manager-mixin/values-of-or-null.html","searchKeys":["valuesOfOrNull","abstract fun <T : Any> valuesOfOrNull(flag: FeatureFlag<T>, store: ObservableFeatureFlagDataStore): Flow<T>?","io.github.kevincianfarini.monarch.ObservableFeatureFlagManagerMixin.valuesOfOrNull"]},{"name":"abstract fun getBoolean(key: String, default: Boolean): Boolean","description":"io.github.kevincianfarini.monarch.FeatureFlagDataStore.getBoolean","location":"core/io.github.kevincianfarini.monarch/-feature-flag-data-store/get-boolean.html","searchKeys":["getBoolean","abstract fun getBoolean(key: String, default: Boolean): Boolean","io.github.kevincianfarini.monarch.FeatureFlagDataStore.getBoolean"]},{"name":"abstract fun getDouble(key: String, default: Double): Double","description":"io.github.kevincianfarini.monarch.FeatureFlagDataStore.getDouble","location":"core/io.github.kevincianfarini.monarch/-feature-flag-data-store/get-double.html","searchKeys":["getDouble","abstract fun getDouble(key: String, default: Double): Double","io.github.kevincianfarini.monarch.FeatureFlagDataStore.getDouble"]},{"name":"abstract fun getLong(key: String, default: Long): Long","description":"io.github.kevincianfarini.monarch.FeatureFlagDataStore.getLong","location":"core/io.github.kevincianfarini.monarch/-feature-flag-data-store/get-long.html","searchKeys":["getLong","abstract fun getLong(key: String, default: Long): Long","io.github.kevincianfarini.monarch.FeatureFlagDataStore.getLong"]},{"name":"abstract fun getString(key: String, default: String): String","description":"io.github.kevincianfarini.monarch.FeatureFlagDataStore.getString","location":"core/io.github.kevincianfarini.monarch/-feature-flag-data-store/get-string.html","searchKeys":["getString","abstract fun getString(key: String, default: String): String","io.github.kevincianfarini.monarch.FeatureFlagDataStore.getString"]},{"name":"abstract fun observeBoolean(key: String, default: Boolean): Flow<Boolean>","description":"io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore.observeBoolean","location":"core/io.github.kevincianfarini.monarch/-observable-feature-flag-data-store/observe-boolean.html","searchKeys":["observeBoolean","abstract fun observeBoolean(key: String, default: Boolean): Flow<Boolean>","io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore.observeBoolean"]},{"name":"abstract fun observeDouble(key: String, default: Double): Flow<Double>","description":"io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore.observeDouble","location":"core/io.github.kevincianfarini.monarch/-observable-feature-flag-data-store/observe-double.html","searchKeys":["observeDouble","abstract fun observeDouble(key: String, default: Double): Flow<Double>","io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore.observeDouble"]},{"name":"abstract fun observeLong(key: String, default: Long): Flow<Long>","description":"io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore.observeLong","location":"core/io.github.kevincianfarini.monarch/-observable-feature-flag-data-store/observe-long.html","searchKeys":["observeLong","abstract fun observeLong(key: String, default: Long): Flow<Long>","io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore.observeLong"]},{"name":"abstract fun observeString(key: String, default: String): Flow<String>","description":"io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore.observeString","location":"core/io.github.kevincianfarini.monarch/-observable-feature-flag-data-store/observe-string.html","searchKeys":["observeString","abstract fun observeString(key: String, default: String): Flow<String>","io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore.observeString"]},{"name":"abstract val default: OptionType","description":"io.github.kevincianfarini.monarch.FeatureFlag.default","location":"core/io.github.kevincianfarini.monarch/-feature-flag/default.html","searchKeys":["default","abstract val default: OptionType","io.github.kevincianfarini.monarch.FeatureFlag.default"]},{"name":"abstract val key: String","description":"io.github.kevincianfarini.monarch.FeatureFlag.key","location":"core/io.github.kevincianfarini.monarch/-feature-flag/key.html","searchKeys":["key","abstract val key: String","io.github.kevincianfarini.monarch.FeatureFlag.key"]},{"name":"class InMemoryFeatureFlagDataStoreOverride(delegate: ObservableFeatureFlagDataStore, initialOverrides: Map<String, Any> = emptyMap()) : ObservableFeatureFlagDataStore","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/index.html","searchKeys":["InMemoryFeatureFlagDataStoreOverride","class InMemoryFeatureFlagDataStoreOverride(delegate: ObservableFeatureFlagDataStore, initialOverrides: Map<String, Any> = emptyMap()) : ObservableFeatureFlagDataStore","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride"]},{"name":"class MixinFeatureFlagManager(store: FeatureFlagDataStore, mixins: List<FeatureFlagManagerMixin> = emptyList()) : FeatureFlagManager","description":"io.github.kevincianfarini.monarch.MixinFeatureFlagManager","location":"core/io.github.kevincianfarini.monarch/-mixin-feature-flag-manager/index.html","searchKeys":["MixinFeatureFlagManager","class MixinFeatureFlagManager(store: FeatureFlagDataStore, mixins: List<FeatureFlagManagerMixin> = emptyList()) : FeatureFlagManager","io.github.kevincianfarini.monarch.MixinFeatureFlagManager"]},{"name":"class ObservableMixinFeatureFlagManager(store: ObservableFeatureFlagDataStore, mixins: List<ObservableFeatureFlagManagerMixin> = emptyList()) : ObservableFeatureFlagManager, FeatureFlagManager","description":"io.github.kevincianfarini.monarch.ObservableMixinFeatureFlagManager","location":"core/io.github.kevincianfarini.monarch/-observable-mixin-feature-flag-manager/index.html","searchKeys":["ObservableMixinFeatureFlagManager","class ObservableMixinFeatureFlagManager(store: ObservableFeatureFlagDataStore, mixins: List<ObservableFeatureFlagManagerMixin> = emptyList()) : ObservableFeatureFlagManager, FeatureFlagManager","io.github.kevincianfarini.monarch.ObservableMixinFeatureFlagManager"]},{"name":"constructor(delegate: ObservableFeatureFlagDataStore, initialOverrides: Map<String, Any> = emptyMap())","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.InMemoryFeatureFlagDataStoreOverride","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/-in-memory-feature-flag-data-store-override.html","searchKeys":["InMemoryFeatureFlagDataStoreOverride","constructor(delegate: ObservableFeatureFlagDataStore, initialOverrides: Map<String, Any> = emptyMap())","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.InMemoryFeatureFlagDataStoreOverride"]},{"name":"constructor(key: String, default: Boolean)","description":"io.github.kevincianfarini.monarch.BooleanFeatureFlag.BooleanFeatureFlag","location":"core/io.github.kevincianfarini.monarch/-boolean-feature-flag/-boolean-feature-flag.html","searchKeys":["BooleanFeatureFlag","constructor(key: String, default: Boolean)","io.github.kevincianfarini.monarch.BooleanFeatureFlag.BooleanFeatureFlag"]},{"name":"constructor(key: String, default: Double)","description":"io.github.kevincianfarini.monarch.DoubleFeatureFlag.DoubleFeatureFlag","location":"core/io.github.kevincianfarini.monarch/-double-feature-flag/-double-feature-flag.html","searchKeys":["DoubleFeatureFlag","constructor(key: String, default: Double)","io.github.kevincianfarini.monarch.DoubleFeatureFlag.DoubleFeatureFlag"]},{"name":"constructor(key: String, default: Long)","description":"io.github.kevincianfarini.monarch.LongFeatureFlag.LongFeatureFlag","location":"core/io.github.kevincianfarini.monarch/-long-feature-flag/-long-feature-flag.html","searchKeys":["LongFeatureFlag","constructor(key: String, default: Long)","io.github.kevincianfarini.monarch.LongFeatureFlag.LongFeatureFlag"]},{"name":"constructor(key: String, default: String)","description":"io.github.kevincianfarini.monarch.StringFeatureFlag.StringFeatureFlag","location":"core/io.github.kevincianfarini.monarch/-string-feature-flag/-string-feature-flag.html","searchKeys":["StringFeatureFlag","constructor(key: String, default: String)","io.github.kevincianfarini.monarch.StringFeatureFlag.StringFeatureFlag"]},{"name":"constructor(store: FeatureFlagDataStore, mixins: List<FeatureFlagManagerMixin> = emptyList())","description":"io.github.kevincianfarini.monarch.MixinFeatureFlagManager.MixinFeatureFlagManager","location":"core/io.github.kevincianfarini.monarch/-mixin-feature-flag-manager/-mixin-feature-flag-manager.html","searchKeys":["MixinFeatureFlagManager","constructor(store: FeatureFlagDataStore, mixins: List<FeatureFlagManagerMixin> = emptyList())","io.github.kevincianfarini.monarch.MixinFeatureFlagManager.MixinFeatureFlagManager"]},{"name":"constructor(store: ObservableFeatureFlagDataStore, mixins: List<ObservableFeatureFlagManagerMixin> = emptyList())","description":"io.github.kevincianfarini.monarch.ObservableMixinFeatureFlagManager.ObservableMixinFeatureFlagManager","location":"core/io.github.kevincianfarini.monarch/-observable-mixin-feature-flag-manager/-observable-mixin-feature-flag-manager.html","searchKeys":["ObservableMixinFeatureFlagManager","constructor(store: ObservableFeatureFlagDataStore, mixins: List<ObservableFeatureFlagManagerMixin> = emptyList())","io.github.kevincianfarini.monarch.ObservableMixinFeatureFlagManager.ObservableMixinFeatureFlagManager"]},{"name":"fun setBoolean(key: String, value: Boolean)","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setBoolean","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/set-boolean.html","searchKeys":["setBoolean","fun setBoolean(key: String, value: Boolean)","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setBoolean"]},{"name":"fun setByteArray(key: String, value: ByteArray)","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setByteArray","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/set-byte-array.html","searchKeys":["setByteArray","fun setByteArray(key: String, value: ByteArray)","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setByteArray"]},{"name":"fun setDouble(key: String, value: Double)","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setDouble","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/set-double.html","searchKeys":["setDouble","fun setDouble(key: String, value: Double)","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setDouble"]},{"name":"fun setLong(key: String, value: Long)","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setLong","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/set-long.html","searchKeys":["setLong","fun setLong(key: String, value: Long)","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setLong"]},{"name":"fun setString(key: String, value: String)","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setString","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/set-string.html","searchKeys":["setString","fun setString(key: String, value: String)","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.setString"]},{"name":"interface FeatureFlag<OptionType : Any>","description":"io.github.kevincianfarini.monarch.FeatureFlag","location":"core/io.github.kevincianfarini.monarch/-feature-flag/index.html","searchKeys":["FeatureFlag","interface FeatureFlag<OptionType : Any>","io.github.kevincianfarini.monarch.FeatureFlag"]},{"name":"interface FeatureFlagDataStore","description":"io.github.kevincianfarini.monarch.FeatureFlagDataStore","location":"core/io.github.kevincianfarini.monarch/-feature-flag-data-store/index.html","searchKeys":["FeatureFlagDataStore","interface FeatureFlagDataStore","io.github.kevincianfarini.monarch.FeatureFlagDataStore"]},{"name":"interface FeatureFlagManager","description":"io.github.kevincianfarini.monarch.FeatureFlagManager","location":"core/io.github.kevincianfarini.monarch/-feature-flag-manager/index.html","searchKeys":["FeatureFlagManager","interface FeatureFlagManager","io.github.kevincianfarini.monarch.FeatureFlagManager"]},{"name":"interface FeatureFlagManagerMixin","description":"io.github.kevincianfarini.monarch.FeatureFlagManagerMixin","location":"core/io.github.kevincianfarini.monarch/-feature-flag-manager-mixin/index.html","searchKeys":["FeatureFlagManagerMixin","interface FeatureFlagManagerMixin","io.github.kevincianfarini.monarch.FeatureFlagManagerMixin"]},{"name":"interface ObservableFeatureFlagDataStore : FeatureFlagDataStore","description":"io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore","location":"core/io.github.kevincianfarini.monarch/-observable-feature-flag-data-store/index.html","searchKeys":["ObservableFeatureFlagDataStore","interface ObservableFeatureFlagDataStore : FeatureFlagDataStore","io.github.kevincianfarini.monarch.ObservableFeatureFlagDataStore"]},{"name":"interface ObservableFeatureFlagManager : FeatureFlagManager","description":"io.github.kevincianfarini.monarch.ObservableFeatureFlagManager","location":"core/io.github.kevincianfarini.monarch/-observable-feature-flag-manager/index.html","searchKeys":["ObservableFeatureFlagManager","interface ObservableFeatureFlagManager : FeatureFlagManager","io.github.kevincianfarini.monarch.ObservableFeatureFlagManager"]},{"name":"interface ObservableFeatureFlagManagerMixin : FeatureFlagManagerMixin","description":"io.github.kevincianfarini.monarch.ObservableFeatureFlagManagerMixin","location":"core/io.github.kevincianfarini.monarch/-observable-feature-flag-manager-mixin/index.html","searchKeys":["ObservableFeatureFlagManagerMixin","interface ObservableFeatureFlagManagerMixin : FeatureFlagManagerMixin","io.github.kevincianfarini.monarch.ObservableFeatureFlagManagerMixin"]},{"name":"open override fun <T : Any> currentValueOf(flag: FeatureFlag<T>): T","description":"io.github.kevincianfarini.monarch.MixinFeatureFlagManager.currentValueOf","location":"core/io.github.kevincianfarini.monarch/-mixin-feature-flag-manager/current-value-of.html","searchKeys":["currentValueOf","open override fun <T : Any> currentValueOf(flag: FeatureFlag<T>): T","io.github.kevincianfarini.monarch.MixinFeatureFlagManager.currentValueOf"]},{"name":"open override fun <T : Any> valuesOf(flag: FeatureFlag<T>): Flow<T>","description":"io.github.kevincianfarini.monarch.ObservableMixinFeatureFlagManager.valuesOf","location":"core/io.github.kevincianfarini.monarch/-observable-mixin-feature-flag-manager/values-of.html","searchKeys":["valuesOf","open override fun <T : Any> valuesOf(flag: FeatureFlag<T>): Flow<T>","io.github.kevincianfarini.monarch.ObservableMixinFeatureFlagManager.valuesOf"]},{"name":"open override fun getBoolean(key: String, default: Boolean): Boolean","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.getBoolean","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/get-boolean.html","searchKeys":["getBoolean","open override fun getBoolean(key: String, default: Boolean): Boolean","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.getBoolean"]},{"name":"open override fun getDouble(key: String, default: Double): Double","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.getDouble","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/get-double.html","searchKeys":["getDouble","open override fun getDouble(key: String, default: Double): Double","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.getDouble"]},{"name":"open override fun getLong(key: String, default: Long): Long","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.getLong","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/get-long.html","searchKeys":["getLong","open override fun getLong(key: String, default: Long): Long","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.getLong"]},{"name":"open override fun getString(key: String, default: String): String","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.getString","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/get-string.html","searchKeys":["getString","open override fun getString(key: String, default: String): String","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.getString"]},{"name":"open override fun observeBoolean(key: String, default: Boolean): Flow<Boolean>","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.observeBoolean","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/observe-boolean.html","searchKeys":["observeBoolean","open override fun observeBoolean(key: String, default: Boolean): Flow<Boolean>","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.observeBoolean"]},{"name":"open override fun observeDouble(key: String, default: Double): Flow<Double>","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.observeDouble","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/observe-double.html","searchKeys":["observeDouble","open override fun observeDouble(key: String, default: Double): Flow<Double>","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.observeDouble"]},{"name":"open override fun observeLong(key: String, default: Long): Flow<Long>","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.observeLong","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/observe-long.html","searchKeys":["observeLong","open override fun observeLong(key: String, default: Long): Flow<Long>","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.observeLong"]},{"name":"open override fun observeString(key: String, default: String): Flow<String>","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.observeString","location":"core/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store-override/observe-string.html","searchKeys":["observeString","open override fun observeString(key: String, default: String): Flow<String>","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStoreOverride.observeString"]},{"name":"open override val default: Boolean","description":"io.github.kevincianfarini.monarch.BooleanFeatureFlag.default","location":"core/io.github.kevincianfarini.monarch/-boolean-feature-flag/default.html","searchKeys":["default","open override val default: Boolean","io.github.kevincianfarini.monarch.BooleanFeatureFlag.default"]},{"name":"open override val default: Double","description":"io.github.kevincianfarini.monarch.DoubleFeatureFlag.default","location":"core/io.github.kevincianfarini.monarch/-double-feature-flag/default.html","searchKeys":["default","open override val default: Double","io.github.kevincianfarini.monarch.DoubleFeatureFlag.default"]},{"name":"open override val default: Long","description":"io.github.kevincianfarini.monarch.LongFeatureFlag.default","location":"core/io.github.kevincianfarini.monarch/-long-feature-flag/default.html","searchKeys":["default","open override val default: Long","io.github.kevincianfarini.monarch.LongFeatureFlag.default"]},{"name":"open override val default: String","description":"io.github.kevincianfarini.monarch.StringFeatureFlag.default","location":"core/io.github.kevincianfarini.monarch/-string-feature-flag/default.html","searchKeys":["default","open override val default: String","io.github.kevincianfarini.monarch.StringFeatureFlag.default"]},{"name":"open override val key: String","description":"io.github.kevincianfarini.monarch.BooleanFeatureFlag.key","location":"core/io.github.kevincianfarini.monarch/-boolean-feature-flag/key.html","searchKeys":["key","open override val key: String","io.github.kevincianfarini.monarch.BooleanFeatureFlag.key"]},{"name":"open override val key: String","description":"io.github.kevincianfarini.monarch.DoubleFeatureFlag.key","location":"core/io.github.kevincianfarini.monarch/-double-feature-flag/key.html","searchKeys":["key","open override val key: String","io.github.kevincianfarini.monarch.DoubleFeatureFlag.key"]},{"name":"open override val key: String","description":"io.github.kevincianfarini.monarch.LongFeatureFlag.key","location":"core/io.github.kevincianfarini.monarch/-long-feature-flag/key.html","searchKeys":["key","open override val key: String","io.github.kevincianfarini.monarch.LongFeatureFlag.key"]},{"name":"open override val key: String","description":"io.github.kevincianfarini.monarch.StringFeatureFlag.key","location":"core/io.github.kevincianfarini.monarch/-string-feature-flag/key.html","searchKeys":["key","open override val key: String","io.github.kevincianfarini.monarch.StringFeatureFlag.key"]},{"name":"class InMemoryFeatureFlagDataStore : ObservableFeatureFlagDataStore","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/index.html","searchKeys":["InMemoryFeatureFlagDataStore","class InMemoryFeatureFlagDataStore : ObservableFeatureFlagDataStore","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore"]},{"name":"class InMemoryFeatureFlagManager : ObservableFeatureFlagManager","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-manager/index.html","searchKeys":["InMemoryFeatureFlagManager","class InMemoryFeatureFlagManager : ObservableFeatureFlagManager","io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager"]},{"name":"constructor()","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.InMemoryFeatureFlagDataStore","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/-in-memory-feature-flag-data-store.html","searchKeys":["InMemoryFeatureFlagDataStore","constructor()","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.InMemoryFeatureFlagDataStore"]},{"name":"constructor()","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager.InMemoryFeatureFlagManager","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-manager/-in-memory-feature-flag-manager.html","searchKeys":["InMemoryFeatureFlagManager","constructor()","io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager.InMemoryFeatureFlagManager"]},{"name":"fun <T : Any> setCurrentValueOf(flag: FeatureFlag<T>, option: T)","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager.setCurrentValueOf","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-manager/set-current-value-of.html","searchKeys":["setCurrentValueOf","fun <T : Any> setCurrentValueOf(flag: FeatureFlag<T>, option: T)","io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager.setCurrentValueOf"]},{"name":"fun setValue(key: String, value: Any?)","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.setValue","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/set-value.html","searchKeys":["setValue","fun setValue(key: String, value: Any?)","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.setValue"]},{"name":"open override fun <T : Any> currentValueOf(flag: FeatureFlag<T>): T","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager.currentValueOf","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-manager/current-value-of.html","searchKeys":["currentValueOf","open override fun <T : Any> currentValueOf(flag: FeatureFlag<T>): T","io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager.currentValueOf"]},{"name":"open override fun <T : Any> valuesOf(flag: FeatureFlag<T>): Flow<T>","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager.valuesOf","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-manager/values-of.html","searchKeys":["valuesOf","open override fun <T : Any> valuesOf(flag: FeatureFlag<T>): Flow<T>","io.github.kevincianfarini.monarch.InMemoryFeatureFlagManager.valuesOf"]},{"name":"open override fun getBoolean(key: String, default: Boolean): Boolean","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.getBoolean","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/get-boolean.html","searchKeys":["getBoolean","open override fun getBoolean(key: String, default: Boolean): Boolean","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.getBoolean"]},{"name":"open override fun getDouble(key: String, default: Double): Double","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.getDouble","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/get-double.html","searchKeys":["getDouble","open override fun getDouble(key: String, default: Double): Double","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.getDouble"]},{"name":"open override fun getLong(key: String, default: Long): Long","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.getLong","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/get-long.html","searchKeys":["getLong","open override fun getLong(key: String, default: Long): Long","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.getLong"]},{"name":"open override fun getString(key: String, default: String): String","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.getString","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/get-string.html","searchKeys":["getString","open override fun getString(key: String, default: String): String","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.getString"]},{"name":"open override fun observeBoolean(key: String, default: Boolean): Flow<Boolean>","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.observeBoolean","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/observe-boolean.html","searchKeys":["observeBoolean","open override fun observeBoolean(key: String, default: Boolean): Flow<Boolean>","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.observeBoolean"]},{"name":"open override fun observeDouble(key: String, default: Double): Flow<Double>","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.observeDouble","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/observe-double.html","searchKeys":["observeDouble","open override fun observeDouble(key: String, default: Double): Flow<Double>","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.observeDouble"]},{"name":"open override fun observeLong(key: String, default: Long): Flow<Long>","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.observeLong","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/observe-long.html","searchKeys":["observeLong","open override fun observeLong(key: String, default: Long): Flow<Long>","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.observeLong"]},{"name":"open override fun observeString(key: String, default: String): Flow<String>","description":"io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.observeString","location":"test/io.github.kevincianfarini.monarch/-in-memory-feature-flag-data-store/observe-string.html","searchKeys":["observeString","open override fun observeString(key: String, default: String): Flow<String>","io.github.kevincianfarini.monarch.InMemoryFeatureFlagDataStore.observeString"]},{"name":"fun <T : Any> ObservableFeatureFlagManager.stateOf(flag: FeatureFlag<T>): State<T>","description":"io.github.kevincianfarini.monarch.stateOf","location":"compose/io.github.kevincianfarini.monarch/state-of.html","searchKeys":["stateOf","fun <T : Any> ObservableFeatureFlagManager.stateOf(flag: FeatureFlag<T>): State<T>","io.github.kevincianfarini.monarch.stateOf"]},{"name":"abstract class JsonFeatureFlag<OptionType : Any>(val key: String, val default: OptionType, serializer: KSerializer<OptionType>) : FeatureFlag<OptionType> ","description":"io.github.kevincianfarini.monarch.mixins.JsonFeatureFlag","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-json-feature-flag/index.html","searchKeys":["JsonFeatureFlag","abstract class JsonFeatureFlag<OptionType : Any>(val key: String, val default: OptionType, serializer: KSerializer<OptionType>) : FeatureFlag<OptionType> ","io.github.kevincianfarini.monarch.mixins.JsonFeatureFlag"]},{"name":"class JsonFeatureFlagManagerMixin(json: Json) : FeatureFlagManagerMixin","description":"io.github.kevincianfarini.monarch.mixins.JsonFeatureFlagManagerMixin","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-json-feature-flag-manager-mixin/index.html","searchKeys":["JsonFeatureFlagManagerMixin","class JsonFeatureFlagManagerMixin(json: Json) : FeatureFlagManagerMixin","io.github.kevincianfarini.monarch.mixins.JsonFeatureFlagManagerMixin"]},{"name":"class ObservableJsonFeatureFlagManagerMixin(json: Json) : ObservableFeatureFlagManagerMixin, FeatureFlagManagerMixin","description":"io.github.kevincianfarini.monarch.mixins.ObservableJsonFeatureFlagManagerMixin","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-observable-json-feature-flag-manager-mixin/index.html","searchKeys":["ObservableJsonFeatureFlagManagerMixin","class ObservableJsonFeatureFlagManagerMixin(json: Json) : ObservableFeatureFlagManagerMixin, FeatureFlagManagerMixin","io.github.kevincianfarini.monarch.mixins.ObservableJsonFeatureFlagManagerMixin"]},{"name":"constructor(json: Json)","description":"io.github.kevincianfarini.monarch.mixins.JsonFeatureFlagManagerMixin.JsonFeatureFlagManagerMixin","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-json-feature-flag-manager-mixin/-json-feature-flag-manager-mixin.html","searchKeys":["JsonFeatureFlagManagerMixin","constructor(json: Json)","io.github.kevincianfarini.monarch.mixins.JsonFeatureFlagManagerMixin.JsonFeatureFlagManagerMixin"]},{"name":"constructor(json: Json)","description":"io.github.kevincianfarini.monarch.mixins.ObservableJsonFeatureFlagManagerMixin.ObservableJsonFeatureFlagManagerMixin","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-observable-json-feature-flag-manager-mixin/-observable-json-feature-flag-manager-mixin.html","searchKeys":["ObservableJsonFeatureFlagManagerMixin","constructor(json: Json)","io.github.kevincianfarini.monarch.mixins.ObservableJsonFeatureFlagManagerMixin.ObservableJsonFeatureFlagManagerMixin"]},{"name":"constructor(key: String, default: OptionType, serializer: KSerializer<OptionType>)","description":"io.github.kevincianfarini.monarch.mixins.JsonFeatureFlag.JsonFeatureFlag","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-json-feature-flag/-json-feature-flag.html","searchKeys":["JsonFeatureFlag","constructor(key: String, default: OptionType, serializer: KSerializer<OptionType>)","io.github.kevincianfarini.monarch.mixins.JsonFeatureFlag.JsonFeatureFlag"]},{"name":"open override fun <T : Any> currentValueOfOrNull(flag: FeatureFlag<T>, store: FeatureFlagDataStore): T?","description":"io.github.kevincianfarini.monarch.mixins.JsonFeatureFlagManagerMixin.currentValueOfOrNull","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-json-feature-flag-manager-mixin/current-value-of-or-null.html","searchKeys":["currentValueOfOrNull","open override fun <T : Any> currentValueOfOrNull(flag: FeatureFlag<T>, store: FeatureFlagDataStore): T?","io.github.kevincianfarini.monarch.mixins.JsonFeatureFlagManagerMixin.currentValueOfOrNull"]},{"name":"open override fun <T : Any> valuesOfOrNull(flag: FeatureFlag<T>, store: ObservableFeatureFlagDataStore): Flow<T>?","description":"io.github.kevincianfarini.monarch.mixins.ObservableJsonFeatureFlagManagerMixin.valuesOfOrNull","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-observable-json-feature-flag-manager-mixin/values-of-or-null.html","searchKeys":["valuesOfOrNull","open override fun <T : Any> valuesOfOrNull(flag: FeatureFlag<T>, store: ObservableFeatureFlagDataStore): Flow<T>?","io.github.kevincianfarini.monarch.mixins.ObservableJsonFeatureFlagManagerMixin.valuesOfOrNull"]},{"name":"open override val default: OptionType","description":"io.github.kevincianfarini.monarch.mixins.JsonFeatureFlag.default","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-json-feature-flag/default.html","searchKeys":["default","open override val default: OptionType","io.github.kevincianfarini.monarch.mixins.JsonFeatureFlag.default"]},{"name":"open override val key: String","description":"io.github.kevincianfarini.monarch.mixins.JsonFeatureFlag.key","location":"mixins/kotlinx-serialization-json/io.github.kevincianfarini.monarch.mixins/-json-feature-flag/key.html","searchKeys":["key","open override val key: String","io.github.kevincianfarini.monarch.mixins.JsonFeatureFlag.key"]},{"name":"abstract fun boolVariation(forKey: String, default: Boolean): Boolean","description":"io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.boolVariation","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/-launch-darkly-client-shim/bool-variation.html","searchKeys":["boolVariation","abstract fun boolVariation(forKey: String, default: Boolean): Boolean","io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.boolVariation"]},{"name":"abstract fun doubleVariation(forKey: String, default: Double): Double","description":"io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.doubleVariation","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/-launch-darkly-client-shim/double-variation.html","searchKeys":["doubleVariation","abstract fun doubleVariation(forKey: String, default: Double): Double","io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.doubleVariation"]},{"name":"abstract fun intVariation(forKey: String, default: Int): Int","description":"io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.intVariation","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/-launch-darkly-client-shim/int-variation.html","searchKeys":["intVariation","abstract fun intVariation(forKey: String, default: Int): Int","io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.intVariation"]},{"name":"abstract fun jsonStringVariation(forKey: String, default: String?): String?","description":"io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.jsonStringVariation","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/-launch-darkly-client-shim/json-string-variation.html","searchKeys":["jsonStringVariation","abstract fun jsonStringVariation(forKey: String, default: String?): String?","io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.jsonStringVariation"]},{"name":"abstract fun observe(key: String, owner: ObserverOwner, handler: () -> Unit)","description":"io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.observe","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/-launch-darkly-client-shim/observe.html","searchKeys":["observe","abstract fun observe(key: String, owner: ObserverOwner, handler: () -> Unit)","io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.observe"]},{"name":"abstract fun stopObserving(owner: ObserverOwner)","description":"io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.stopObserving","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/-launch-darkly-client-shim/stop-observing.html","searchKeys":["stopObserving","abstract fun stopObserving(owner: ObserverOwner)","io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.stopObserving"]},{"name":"abstract fun stringVariation(forKey: String, default: String): String","description":"io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.stringVariation","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/-launch-darkly-client-shim/string-variation.html","searchKeys":["stringVariation","abstract fun stringVariation(forKey: String, default: String): String","io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim.stringVariation"]},{"name":"class ObserverOwner","description":"io.github.kevincianfarini.monarch.launchdarkly.ObserverOwner","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/-observer-owner/index.html","searchKeys":["ObserverOwner","class ObserverOwner","io.github.kevincianfarini.monarch.launchdarkly.ObserverOwner"]},{"name":"fun LDClientInterface.asFeatureFlagDataStore(): ObservableFeatureFlagDataStore","description":"io.github.kevincianfarini.monarch.launchdarkly.asFeatureFlagDataStore","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/as-feature-flag-data-store.html","searchKeys":["asFeatureFlagDataStore","fun LDClientInterface.asFeatureFlagDataStore(): ObservableFeatureFlagDataStore","io.github.kevincianfarini.monarch.launchdarkly.asFeatureFlagDataStore"]},{"name":"fun LaunchDarklyClientShim.asFeatureFlagDataStore(): ObservableFeatureFlagDataStore","description":"io.github.kevincianfarini.monarch.launchdarkly.asFeatureFlagDataStore","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/as-feature-flag-data-store.html","searchKeys":["asFeatureFlagDataStore","fun LaunchDarklyClientShim.asFeatureFlagDataStore(): ObservableFeatureFlagDataStore","io.github.kevincianfarini.monarch.launchdarkly.asFeatureFlagDataStore"]},{"name":"interface LaunchDarklyClientShim","description":"io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim","location":"integrations/launch-darkly/io.github.kevincianfarini.monarch.launchdarkly/-launch-darkly-client-shim/index.html","searchKeys":["LaunchDarklyClientShim","interface LaunchDarklyClientShim","io.github.kevincianfarini.monarch.launchdarkly.LaunchDarklyClientShim"]},{"name":"class EnvironmentVariableFeatureFlagDataStore : FeatureFlagDataStore","description":"io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore","location":"integrations/environment-variable/io.github.kevincianfarini.monarch.environment/-environment-variable-feature-flag-data-store/index.html","searchKeys":["EnvironmentVariableFeatureFlagDataStore","class EnvironmentVariableFeatureFlagDataStore : FeatureFlagDataStore","io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore"]},{"name":"constructor(strictlyTyped: Boolean = true)","description":"io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.EnvironmentVariableFeatureFlagDataStore","location":"integrations/environment-variable/io.github.kevincianfarini.monarch.environment/-environment-variable-feature-flag-data-store/-environment-variable-feature-flag-data-store.html","searchKeys":["EnvironmentVariableFeatureFlagDataStore","constructor(strictlyTyped: Boolean = true)","io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.EnvironmentVariableFeatureFlagDataStore"]},{"name":"open override fun getBoolean(key: String, default: Boolean): Boolean","description":"io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.getBoolean","location":"integrations/environment-variable/io.github.kevincianfarini.monarch.environment/-environment-variable-feature-flag-data-store/get-boolean.html","searchKeys":["getBoolean","open override fun getBoolean(key: String, default: Boolean): Boolean","io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.getBoolean"]},{"name":"open override fun getDouble(key: String, default: Double): Double","description":"io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.getDouble","location":"integrations/environment-variable/io.github.kevincianfarini.monarch.environment/-environment-variable-feature-flag-data-store/get-double.html","searchKeys":["getDouble","open override fun getDouble(key: String, default: Double): Double","io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.getDouble"]},{"name":"open override fun getLong(key: String, default: Long): Long","description":"io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.getLong","location":"integrations/environment-variable/io.github.kevincianfarini.monarch.environment/-environment-variable-feature-flag-data-store/get-long.html","searchKeys":["getLong","open override fun getLong(key: String, default: Long): Long","io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.getLong"]},{"name":"open override fun getString(key: String, default: String): String","description":"io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.getString","location":"integrations/environment-variable/io.github.kevincianfarini.monarch.environment/-environment-variable-feature-flag-data-store/get-string.html","searchKeys":["getString","open override fun getString(key: String, default: String): String","io.github.kevincianfarini.monarch.environment.EnvironmentVariableFeatureFlagDataStore.getString"]}]